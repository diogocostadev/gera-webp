#!/bin/bash

# Script de Verifica√ß√£o SEO Multil√≠ngue
# Verifica se todas as tradu√ß√µes e configura√ß√µes SEO est√£o funcionando

echo "üåê Verifica√ß√£o SEO Multil√≠ngue - Wepper.app"
echo "=============================================="
echo ""

# Cores para output
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para verificar se arquivo existe
check_file() {
    if [ -f "$1" ]; then
        echo -e "${GREEN}‚úÖ Encontrado:${NC} $1"
        return 0
    else
        echo -e "${RED}‚ùå N√£o encontrado:${NC} $1"
        return 1
    fi
}

# Fun√ß√£o para contar linhas em arquivo
count_lines() {
    if [ -f "$1" ]; then
        lines=$(wc -l < "$1")
        echo -e "${BLUE}üìÑ Linhas:${NC} $lines"
    fi
}

echo "üîç 1. Verificando Views Multil√≠ngues"
echo "======================================"

# Views JPEG
echo -e "\n${YELLOW}üìÅ Views JPEG:${NC}"
check_file "../src/conversor/Views/Home/CompressorJpeg.cshtml"
check_file "../src/conversor/Views/Home/CompressorJpegEnglish.cshtml"
check_file "../src/conversor/Views/Home/CompressorJpegSpanish.cshtml"

# Views PNG  
echo -e "\n${YELLOW}üìÅ Views PNG:${NC}"
check_file "../src/conversor/Views/Home/CompressorPng.cshtml"
check_file "../src/conversor/Views/Home/CompressorPngEnglish.cshtml"
check_file "../src/conversor/Views/Home/CompressorPngSpanish.cshtml"

echo -e "\nüîß 2. Verificando Configura√ß√µes T√©cnicas"
echo "========================================="

# Controller
echo -e "\n${YELLOW}üéõÔ∏è HomeController:${NC}"
if check_file "../src/conversor/Controllers/HomeController.cs"; then
    count_lines "../src/conversor/Controllers/HomeController.cs"
    
    echo -e "\n${BLUE}üîé Verificando rotas multil√≠ngues:${NC}"
    
    # Verificar rotas JPEG
    if grep -q "en/compress-jpeg" "../src/conversor/Controllers/HomeController.cs"; then
        echo -e "${GREEN}‚úÖ Rota EN JPEG encontrada${NC}"
    else
        echo -e "${RED}‚ùå Rota EN JPEG n√£o encontrada${NC}"
    fi
    
    if grep -q "es/comprimir-jpeg" "../src/conversor/Controllers/HomeController.cs"; then
        echo -e "${GREEN}‚úÖ Rota ES JPEG encontrada${NC}"
    else
        echo -e "${RED}‚ùå Rota ES JPEG n√£o encontrada${NC}"
    fi
    
    # Verificar rotas PNG
    if grep -q "en/compress-png" "../src/conversor/Controllers/HomeController.cs"; then
        echo -e "${GREEN}‚úÖ Rota EN PNG encontrada${NC}"
    else
        echo -e "${RED}‚ùå Rota EN PNG n√£o encontrada${NC}"
    fi
    
    if grep -q "es/comprimir-png" "../src/conversor/Controllers/HomeController.cs"; then
        echo -e "${GREEN}‚úÖ Rota ES PNG encontrada${NC}"
    else
        echo -e "${RED}‚ùå Rota ES PNG n√£o encontrada${NC}"
    fi
fi

# SeoController
echo -e "\n${YELLOW}üó∫Ô∏è SeoController (Sitemap):${NC}"
if check_file "../src/conversor/Controllers/SeoController.cs"; then
    count_lines "../src/conversor/Controllers/SeoController.cs"
    
    echo -e "\n${BLUE}üîé Verificando URLs no sitemap:${NC}"
    
    if grep -q "/comprimir-jpeg" "../src/conversor/Controllers/SeoController.cs"; then
        echo -e "${GREEN}‚úÖ URL PT JPEG no sitemap${NC}"
    else
        echo -e "${RED}‚ùå URL PT JPEG n√£o encontrada no sitemap${NC}"
    fi
    
    if grep -q "/en/compress-jpeg" "../src/conversor/Controllers/SeoController.cs"; then
        echo -e "${GREEN}‚úÖ URL EN JPEG no sitemap${NC}"
    else
        echo -e "${RED}‚ùå URL EN JPEG n√£o encontrada no sitemap${NC}"
    fi
    
    if grep -q "/es/comprimir-jpeg" "../src/conversor/Controllers/SeoController.cs"; then
        echo -e "${GREEN}‚úÖ URL ES JPEG no sitemap${NC}"
    else
        echo -e "${RED}‚ùå URL ES JPEG n√£o encontrada no sitemap${NC}"
    fi
fi

# Layout (Hreflang)
echo -e "\n${YELLOW}üåê _Layout (Hreflang):${NC}"
if check_file "../src/conversor/Views/Shared/_Layout.cshtml"; then
    count_lines "../src/conversor/Views/Shared/_Layout.cshtml"
    
    echo -e "\n${BLUE}üîé Verificando hreflang din√¢mico:${NC}"
    
    if grep -q "urlMappings" "../src/conversor/Views/Shared/_Layout.cshtml"; then
        echo -e "${GREEN}‚úÖ Sistema hreflang din√¢mico implementado${NC}"
    else
        echo -e "${RED}‚ùå Sistema hreflang din√¢mico n√£o encontrado${NC}"
    fi
    
    if grep -q "comprimir-jpeg" "../src/conversor/Views/Shared/_Layout.cshtml"; then
        echo -e "${GREEN}‚úÖ Mapeamentos JPEG encontrados${NC}"
    else
        echo -e "${RED}‚ùå Mapeamentos JPEG n√£o encontrados${NC}"
    fi
    
    if grep -q "compress-png" "../src/conversor/Views/Shared/_Layout.cshtml"; then
        echo -e "${GREEN}‚úÖ Mapeamentos PNG encontrados${NC}"
    else
        echo -e "${RED}‚ùå Mapeamentos PNG n√£o encontrados${NC}"
    fi
fi

echo -e "\nüìä 3. Verificando Conte√∫do das Views"
echo "====================================="

# Fun√ß√£o para verificar conte√∫do de view
check_view_content() {
    local file="$1"
    local lang="$2"
    local format="$3"
    
    echo -e "\n${YELLOW}üìù Verificando $lang $format:${NC}"
    
    if [ -f "$file" ]; then
        # Verificar ViewData
        if grep -q "ViewData\[\"Title\"\]" "$file"; then
            title=$(grep "ViewData\[\"Title\"\]" "$file" | head -1)
            echo -e "${GREEN}‚úÖ Title:${NC} ${title#*= }"
        fi
        
        if grep -q "ViewData\[\"Description\"\]" "$file"; then
            echo -e "${GREEN}‚úÖ Description configurada${NC}"
        fi
        
        if grep -q "ViewData\[\"Keywords\"\]" "$file"; then
            echo -e "${GREEN}‚úÖ Keywords configuradas${NC}"
        fi
        
        # Verificar elementos espec√≠ficos do idioma
        case $lang in
            "English")
                if grep -q "Compress.*Online" "$file"; then
                    echo -e "${GREEN}‚úÖ Conte√∫do em ingl√™s detectado${NC}"
                fi
                ;;
            "Spanish")
                if grep -q "Comprimir.*Online" "$file"; then
                    echo -e "${GREEN}‚úÖ Conte√∫do em espanhol detectado${NC}"
                fi
                ;;
        esac
        
        # Verificar tamanho do arquivo
        size=$(wc -l < "$file")
        echo -e "${BLUE}üìè Tamanho:${NC} $size linhas"
        
    else
        echo -e "${RED}‚ùå Arquivo n√£o encontrado${NC}"
    fi
}

# Verificar views em ingl√™s
check_view_content "../src/conversor/Views/Home/CompressorJpegEnglish.cshtml" "English" "JPEG"
check_view_content "../src/conversor/Views/Home/CompressorPngEnglish.cshtml" "English" "PNG"

# Verificar views em espanhol
check_view_content "../src/conversor/Views/Home/CompressorJpegSpanish.cshtml" "Spanish" "JPEG"
check_view_content "../src/conversor/Views/Home/CompressorPngSpanish.cshtml" "Spanish" "PNG"

echo -e "\nüìã 4. Verificando Documenta√ß√£o"
echo "==============================="

# Documenta√ß√£o
echo -e "\n${YELLOW}üìö Documentos:${NC}"
check_file "../docs/SEO_MULTILINGUAL_IMPLEMENTATION.md"

if [ -f "../docs/README_PLANEJAMENTO.md" ]; then
    echo -e "${GREEN}‚úÖ README_PLANEJAMENTO.md existe${NC}"
    
    if grep -q "SEO_MULTILINGUAL_IMPLEMENTATION" "../docs/README_PLANEJAMENTO.md"; then
        echo -e "${GREEN}‚úÖ Documenta√ß√£o SEO referenciada no √≠ndice${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è Adicionar refer√™ncia no README_PLANEJAMENTO.md${NC}"
    fi
fi

echo -e "\nüöÄ 5. Resumo da Verifica√ß√£o"
echo "============================"

# Contar arquivos criados
views_created=0
routes_found=0

# Contar views criadas
for view in "CompressorJpegEnglish" "CompressorJpegSpanish" "CompressorPngEnglish" "CompressorPngSpanish"; do
    if [ -f "../src/conversor/Views/Home/${view}.cshtml" ]; then
        ((views_created++))
    fi
done

# Contar rotas implementadas
for route in "en/compress-jpeg" "es/comprimir-jpeg" "en/compress-png" "es/comprimir-png"; do
    if grep -q "$route" "../src/conversor/Controllers/HomeController.cs" 2>/dev/null; then
        ((routes_found++))
    fi
done

echo -e "\n${BLUE}üìà Estat√≠sticas:${NC}"
echo -e "Views criadas: ${GREEN}$views_created/4${NC}"
echo -e "Rotas implementadas: ${GREEN}$routes_found/4${NC}"

# URLs test√°veis
echo -e "\n${BLUE}üîó URLs para testar:${NC}"
echo "http://localhost:5169/comprimir-jpeg"
echo "http://localhost:5169/en/compress-jpeg"
echo "http://localhost:5169/es/comprimir-jpeg"
echo "http://localhost:5169/comprimir-png"
echo "http://localhost:5169/en/compress-png"
echo "http://localhost:5169/es/comprimir-png"

echo -e "\n${BLUE}üåê URLs de produ√ß√£o:${NC}"
echo "https://wepper.app/comprimir-jpeg"
echo "https://wepper.app/en/compress-jpeg"
echo "https://wepper.app/es/comprimir-jpeg"
echo "https://wepper.app/comprimir-png"
echo "https://wepper.app/en/compress-png"
echo "https://wepper.app/es/comprimir-png"

if [ $views_created -eq 4 ] && [ $routes_found -eq 4 ]; then
    echo -e "\n${GREEN}üéâ IMPLEMENTA√á√ÉO COMPLETA!${NC}"
    echo -e "${GREEN}‚úÖ Todas as tradu√ß√µes e configura√ß√µes SEO est√£o funcionando${NC}"
    echo -e "${BLUE}üöÄ Pronto para deploy em produ√ß√£o${NC}"
else
    echo -e "\n${YELLOW}‚ö†Ô∏è Implementa√ß√£o parcial${NC}"
    echo -e "${RED}Verificar itens faltantes acima${NC}"
fi

echo -e "\n${BLUE}üìã Pr√≥ximos passos:${NC}"
echo "1. Compilar e testar local: dotnet build && dotnet run"
echo "2. Verificar cada URL no navegador"
echo "3. Testar hreflang com ferramentas online"
echo "4. Deploy em produ√ß√£o"
echo "5. Submit no Google Search Console"

echo ""
echo "Script executado em: $(date)"
echo "==============================================" 